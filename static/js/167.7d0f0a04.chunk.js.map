{"version":3,"sources":["node_modules/@arcgis/core/layers/support/RasterWorker.js"],"names":["e","o","data","options","toJSON","r","pixelBlock","fromJSON","extent","this","symbolizer","symbolize","Promise","resolve","symbolizerJSON","histograms","rendererJSON","type","simpleStretch","srcPixelBlock","stretchParams","s","tileSize","maximumPyramidLevel","forEach","set","srcPixelBlocks","map","srcMosaicSize","alignmentInfo","coefs","l","destDimension","sampleSpacing","interpolation"],"mappings":"yFAAA,+DAIg8C,UAA5mC,MAAQ,aAAaA,GAAG,MAAMC,QAAQ,YAAED,EAAEE,KAAKF,EAAEG,SAAS,OAAOF,GAAGA,EAAEG,SAAS,UAAUC,GAAGA,EAAEC,WAAW,IAAEC,SAASF,EAAEC,YAAYD,EAAEG,OAAOH,EAAEG,OAAO,IAAED,SAASF,EAAEG,QAAQ,KAAK,MAAMP,EAAEQ,KAAKC,WAAWC,UAAUN,GAAG,OAAOO,QAAQC,QAAQZ,GAAGA,EAAEG,UAAU,uBAAuBJ,GAAG,IAAIK,EAAEI,KAAKC,WAAW,IAAEH,SAASP,EAAEc,gBAAgBd,EAAEe,YAAY,mBAAmB,OAAOV,EAAEI,KAAKC,iBAAY,EAAOL,EAAEW,aAAaC,QAAQR,KAAKC,WAAWM,aAAaD,WAAWf,EAAEe,YAAY,QAAQV,GAAG,MAAMJ,EAAEQ,KAAKC,WAAWQ,cAAc,IAAEX,SAASF,EAAEc,eAAed,EAAEe,eAAe,OAAOR,QAAQC,QAAQZ,GAAGA,EAAEG,UAAU,6BAA6BC,GAAG,MAAMgB,EAAE,YAAE,IAAEd,SAASF,EAAEc,gBAAgB,OAAOP,QAAQC,QAAQQ,GAAG,MAAMhB,GAAG,MAAMJ,EAAE,YAAE,IAAEM,SAASF,EAAEc,eAAed,EAAEiB,SAASjB,EAAEkB,qBAAqB,OAAOtB,GAAGA,EAAEuB,QAAQ,CAAExB,EAAEK,KAAKJ,EAAEwB,IAAIpB,EAAE,MAAML,OAAE,EAAOA,EAAEI,YAAaQ,QAAQC,QAAQZ,GAAG,yBAAyBI,GAAG,MAAMJ,EAAEI,EAAEqB,eAAeC,IAAKtB,GAAGA,EAAE,IAAI,IAAEA,GAAG,MAAOgB,EAAE,YAAEpB,EAAEI,EAAEuB,cAAc,KAAK,KAAKvB,EAAEwB,eAAe,IAAIxB,EAAEyB,MAAM,OAAOT,GAAGA,EAAEjB,SAAS,MAAM2B,EAAE,YAAEV,EAAEhB,EAAE2B,cAAc3B,EAAEyB,MAAMzB,EAAE4B,cAAc5B,EAAE6B,eAAe,OAAOH,GAAGA,EAAE3B","file":"static/js/167.7d0f0a04.chunk.js","sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.20/esri/copyright.txt for details.\n*/\nimport\"../../geometry.js\";import e from\"./PixelBlock.js\";import{decode as r}from\"./rasterFormats/RasterCodec.js\";import{estimateStatisticsHistograms as o,split as s,mosaic as t,approximateTransform as i}from\"./rasterFunctions/pixelUtils.js\";import l from\"../../renderers/support/RasterSymbolizer.js\";import m from\"../../geometry/Extent.js\";class n{async decode(e){const o=await r(e.data,e.options);return o&&o.toJSON()}symbolize(r){r.pixelBlock=e.fromJSON(r.pixelBlock),r.extent=r.extent?m.fromJSON(r.extent):null;const o=this.symbolizer.symbolize(r);return Promise.resolve(o&&o.toJSON())}async updateSymbolizer(e){var r;this.symbolizer=l.fromJSON(e.symbolizerJSON),e.histograms&&\"rasterStretch\"===(null==(r=this.symbolizer)?void 0:r.rendererJSON.type)&&(this.symbolizer.rendererJSON.histograms=e.histograms)}stretch(r){const o=this.symbolizer.simpleStretch(e.fromJSON(r.srcPixelBlock),r.stretchParams);return Promise.resolve(o&&o.toJSON())}estimateStatisticsHistograms(r){const s=o(e.fromJSON(r.srcPixelBlock));return Promise.resolve(s)}split(r){const o=s(e.fromJSON(r.srcPixelBlock),r.tileSize,r.maximumPyramidLevel);return o&&o.forEach(((e,r)=>{o.set(r,null==e?void 0:e.toJSON())})),Promise.resolve(o)}async mosaicAndTransform(r){const o=r.srcPixelBlocks.map((r=>r?new e(r):null)),s=t(o,r.srcMosaicSize,null,null,r.alignmentInfo);if(!r.coefs)return s&&s.toJSON();const l=i(s,r.destDimension,r.coefs,r.sampleSpacing,r.interpolation);return l&&l.toJSON()}}export default n;\n"],"sourceRoot":""}