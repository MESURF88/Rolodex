(this.webpackJsonp=this.webpackJsonp||[]).push([[59],{571:function(e,t,i){"use strict";i.d(t,"a",(function(){return _}));var r=i(327),a=i(341),l=i(348),s=i(332),n=i(412),o=i(326),c=i(520),p=i(538),u=i(334),b=i(491),d=i(349),y=i(366),h=i(329),f=(i(325),i(384)),O=i(328),m=i(462),v=i(337);class g{constructor(){this.location={left:0,top:0,width:0,height:0},this._allAvailability="unknown",this.byteSize=40}getAvailability(e,t){if("unknown"!==this._allAvailability)return this._allAvailability;const i=(e-this.location.top)*this.location.width+(t-this.location.left),r=i%8,a=i>>3,l=this._tileAvailabilityBitSet;return a<0||a>l.length?"unknown":l[a]&1<<r?"available":"unavailable"}_updateFromData(e){const t=this.location.width,i=this.location.height;let r=!0,a=!0;const l=Math.ceil(t*i/8),s=new Uint8Array(l);let n=0;for(let o=0;o<e.length;o++){const t=o%8;e[o]?(a=!1,s[n]|=1<<t):r=!1,7===t&&++n}a?this._allAvailability="unavailable":r?this._allAvailability="available":(this._allAvailability="unknown",this._tileAvailabilityBitSet=s,this.byteSize+=s.length)}static fromDefinition(e,t){const i=e.service.request||a.default,{row:r,col:l,width:n,height:o}=e,c={query:{f:"json"}};return t=t?{...c,...t}:c,i(function(e){let t;if("vector-tile"===e.service.type)t=`${e.service.url}/tilemap/${e.level}/${e.row}/${e.col}/${e.width}/${e.height}`;else{const i=e.service.tileServers;t=`${i&&i.length?i[e.row%i.length]:e.service.url}/tilemap/${e.level}/${e.row}/${e.col}/${e.width}/${e.height}`}const i=e.service.query;return i&&(t=`${t}?${i}`),t}(e),t).then(e=>e.data).catch(e=>{if(e&&e.details&&422===e.details.httpStatus)return{location:{top:r,left:l,width:n,height:o},valid:!0,data:Object(m.b)(n*o,0)};throw e}).then(e=>{if(e.location&&(e.location.top!==r||e.location.left!==l||e.location.width!==n||e.location.height!==o))throw new s.a("tilemap:location-mismatch","Tilemap response for different location than requested",{response:e,definition:{top:r,left:l,width:n,height:o}});return g.fromJSON(e)})}static fromJSON(e){g.validateJSON(e);const t=new g;return t.location=Object.freeze(Object(v.a)(e.location)),t._updateFromData(e.data),Object.freeze(t)}static validateJSON(e){if(!e||!e.location)throw new s.a("tilemap:missing-location","Location missing from tilemap response");if(!1===e.valid)throw new s.a("tilemap:invalid","Tilemap response was marked as invalid");if(!e.data)throw new s.a("tilemap:missing-data","Data missing from tilemap response");if(!Array.isArray(e.data))throw new s.a("tilemap:data-mismatch","Data must be an array of numbers");if(e.data.length!==e.location.width*e.location.height)throw new s.a("tilemap:data-mismatch","Number of data items does not match width/height of tilemap")}}function j(e){return`${e.level}/${e.row}/${e.col}/${e.width}/${e.height}`}var S;const w=o.a.getLogger("esri.layers.support.TilemapCache");let _=S=class extends l.a{constructor(e){super(e),this._handles=new n.a,this._pendingTilemapRequests={},this._availableLevels={},this.levels=5,this.cacheByteSize=2097152,this.request=a.default,this._prefetchingEnabled=!0}initialize(){this._tilemapCache=new c.a(this.cacheByteSize),this._handles.add([this.watch(["layer.parsedUrl","layer.tileServers?"],()=>this._initializeTilemapDefinition()),Object(y.a)(this,"layer.tileInfo.lods",e=>this._initializeAvailableLevels(e),!0)]),this._initializeTilemapDefinition()}destroy(){this._handles&&(this._handles.destroy(),this._handles=null)}castLevels(e){return e<=2?(w.error("Minimum levels for Tilemap is 3, but got ",e),3):e}get size(){return 1<<this.levels}fetchTilemap(e,t,i,r){if(!this._availableLevels[e])return Promise.reject(new s.a("tilemap-cache:level-unavailable",`Level ${e} is unavailable in the service`));const a=this._tmpTilemapDefinition,l=this._tilemapFromCache(e,t,i,a);if(l)return Promise.resolve(l);const n=r&&r.signal;return r={...r,signal:null},new Promise((e,t)=>{Object(u.q)(n,()=>t(Object(u.e)()));const i=j(a);let l=this._pendingTilemapRequests[i];if(!l){l=g.fromDefinition(a,r).then(e=>(this._tilemapCache.put(i,e,e.byteSize),e));const e=()=>delete this._pendingTilemapRequests[i];this._pendingTilemapRequests[i]=l,l.then(e,e)}l.then(e,t)})}getAvailability(e,t,i){if(!this._availableLevels[e])return"unavailable";const r=this._tilemapFromCache(e,t,i,this._tmpTilemapDefinition);return r?r.getAvailability(t,i):"unknown"}getAvailabilityUpsample(e,t,i,r){r.level=e,r.row=t,r.col=i;const a=this.layer.tileInfo;for(a.updateTileInfo(r);;){const e=this.getAvailability(r.level,r.row,r.col);if("unavailable"!==e)return e;if(!a.upsampleTile(r))return"unavailable"}}fetchAvailability(e,t,i,r){return this._availableLevels[e]?this.fetchTilemap(e,t,i,r).catch(e=>e).then(r=>{if(r instanceof g){const a=r.getAvailability(t,i);return"unavailable"===a?Promise.reject(new s.a("tile-map:tile-unavailable","Tile is not available",{level:e,row:t,col:i})):a}if(Object(u.m)(r))throw r;return"unknown"}):Promise.reject(new s.a("tilemap-cache:level-unavailable",`Level ${e} is unavailable in the service`))}fetchAvailabilityUpsample(e,t,i,r,a){r.level=e,r.row=t,r.col=i;const l=this.layer.tileInfo;l.updateTileInfo(r);const s=this.fetchAvailability(e,t,i,a).catch(e=>{if(Object(u.m)(e))throw e;if(l.upsampleTile(r))return this.fetchAvailabilityUpsample(r.level,r.row,r.col,r);throw e});return this._fetchAvailabilityUpsamplePrefetch(r.id,e,t,i,a,s),s}async _fetchAvailabilityUpsamplePrefetch(e,t,i,r,a,l){if(!this._prefetchingEnabled)return;const s="prefetch-"+e;if(this._handles.has(s))return;const n=Object(u.d)();l.then(()=>n.abort(),()=>n.abort());let o=!1;const c={remove(){o||(o=!0,n.abort())}};if(this._handles.add(c,s),await Object(b.c)(10,n.signal).catch(()=>{}),o||(o=!0,this._handles.remove(s)),Object(u.n)(n))return;const p={id:e,level:t,row:i,col:r},d={...a,signal:n.signal},y=this.layer.tileInfo;for(let u=0;S._prefetches.length<S._maxPrefetch&&y.upsampleTile(p);++u){const e=this.fetchAvailability(p.level,p.row,p.col,d);S._prefetches.push(e);const t=()=>{S._prefetches.removeUnordered(e)};e.then(t,t)}}_initializeTilemapDefinition(){if(!this.layer.parsedUrl)return;const e=this.layer.parsedUrl,t=e.query;this._tilemapCache.clear(),this._tmpTilemapDefinition={service:{url:e.path,query:t?Object(d.E)(t):null,tileServers:this.layer.tileServers,request:this.request,type:this.layer.type},width:this.size,height:this.size,level:0,row:0,col:0}}_tilemapFromCache(e,t,i,r){r.level=e,r.row=t-t%this.size,r.col=i-i%this.size;const a=j(r);return this._tilemapCache.get(a)}_initializeAvailableLevels(e){this._availableLevels={},e&&e.forEach(e=>this._availableLevels[e.level]=!0)}get test(){const e=this;return{get prefetchingEnabled(){return e._prefetchingEnabled},set prefetchingEnabled(t){e._prefetchingEnabled=t},hasTilemap:(t,i,r)=>!!e._tilemapFromCache(t,i,r,e._tmpTilemapDefinition)}}};_._maxPrefetch=4,_._prefetches=new p.a({initialSize:S._maxPrefetch}),Object(r.a)([Object(h.b)({constructOnly:!0,type:Number})],_.prototype,"levels",void 0),Object(r.a)([Object(f.a)("levels")],_.prototype,"castLevels",null),Object(r.a)([Object(h.b)({readOnly:!0,type:Number})],_.prototype,"size",null),Object(r.a)([Object(h.b)({constructOnly:!0,type:Number})],_.prototype,"cacheByteSize",void 0),Object(r.a)([Object(h.b)({constructOnly:!0})],_.prototype,"layer",void 0),Object(r.a)([Object(h.b)({constructOnly:!0})],_.prototype,"request",void 0),_=S=Object(r.a)([Object(O.a)("esri.layers.support.TilemapCache")],_)},627:function(e,t,i){"use strict";i.d(t,"a",(function(){return l})),i.d(t,"b",(function(){return a}));var r=i(420);const a={type:r.a,json:{origins:{service:{read:{source:["tileInfo","minScale","maxScale","minLOD","maxLOD"],reader:l}}}}};function l(e,t,i,a){if(!e)return null;const{minScale:l,maxScale:s,minLOD:n,maxLOD:o}=t;if(null!=n&&null!=o)return a&&a.ignoreMinMaxLOD?r.a.fromJSON(e):r.a.fromJSON({...e,lods:e.lods.filter(({level:e})=>null!=e&&e>=n&&e<=o)});if(0!==l&&0!==s){const t=e=>Math.round(1e4*e)/1e4,i=l?t(l):1/0,a=s?t(s):-1/0;return r.a.fromJSON({...e,lods:e.lods.filter(e=>{const r=t(e.scale);return r<=i&&r>=a})})}return r.a.fromJSON(e)}},659:function(e,t,i){"use strict";function r(e,t,i){return t.flatten(({sublayers:e})=>e).length!==e.length||(!!e.some(e=>e.originIdOf("minScale")>i||e.originIdOf("maxScale")>i||e.originIdOf("renderer")>i||e.originIdOf("labelingInfo")>i||e.originIdOf("opacity")>i||e.originIdOf("labelsVisible")>i||e.originIdOf("source")>i)||!l(e,t))}function a(e,t,i){return!!e.some(e=>{const t=e.source;return!(!t||"map-layer"===t.type&&t.mapLayerId===e.id&&(!t.gdbVersion||t.gdbVersion===i.gdbVersion))||e.originIdOf("renderer")>2||e.originIdOf("labelingInfo")>2||e.originIdOf("opacity")>2||e.originIdOf("labelsVisible")>2})||!l(e,t)}function l(e,t){if(!e||!e.length)return!0;const i=t.slice().reverse().flatten(({sublayers:e})=>e&&e.toArray().reverse()).map(e=>e.id).toArray();if(e.length>i.length)return!1;let r=0;const a=i.length;for(const{id:l}of e){for(;r<a&&i[r]!==l;)r++;if(r>=a)return!1}return!0}function s(e){return!!e&&e.some(e=>null!=e.minScale||e.layerDefinition&&null!=e.layerDefinition.minScale)}i.d(t,"a",(function(){return a})),i.d(t,"b",(function(){return s})),i.d(t,"c",(function(){return r}))},719:function(e,t,i){"use strict";i.d(t,"a",(function(){return p}));var r=i(327),a=(i(346),i(329)),l=(i(325),i(330),i(326),i(351)),s=i(328),n=i(627),o=i(571),c=i(347);const p=e=>{let t=class extends e{constructor(){super(...arguments),this.copyright=null,this.minScale=0,this.maxScale=0,this.spatialReference=null,this.tileInfo=null,this.tilemapCache=null}readMinScale(e,t){return null!=t.minLOD&&null!=t.maxLOD?e:0}readMaxScale(e,t){return null!=t.minLOD&&null!=t.maxLOD?e:0}get supportsBlankTile(){return this.version>=10.2}readTilemapCache(e,t){return t.capabilities&&t.capabilities.indexOf("Tilemap")>-1?new o.a({layer:this}):null}};return Object(r.a)([Object(a.b)({json:{read:{source:"copyrightText"}}})],t.prototype,"copyright",void 0),Object(r.a)([Object(a.b)()],t.prototype,"minScale",void 0),Object(r.a)([Object(l.a)("service","minScale")],t.prototype,"readMinScale",null),Object(r.a)([Object(a.b)()],t.prototype,"maxScale",void 0),Object(r.a)([Object(l.a)("service","maxScale")],t.prototype,"readMaxScale",null),Object(r.a)([Object(a.b)({type:c.a})],t.prototype,"spatialReference",void 0),Object(r.a)([Object(a.b)({readOnly:!0})],t.prototype,"supportsBlankTile",null),Object(r.a)([Object(a.b)(n.b)],t.prototype,"tileInfo",void 0),Object(r.a)([Object(a.b)()],t.prototype,"tilemapCache",void 0),Object(r.a)([Object(l.a)("service","tilemapCache",["capabilities"])],t.prototype,"readTilemapCache",null),Object(r.a)([Object(a.b)()],t.prototype,"version",void 0),t=Object(r.a)([Object(s.a)("esri.layers.mixins.ArcGISCachedService")],t),t}},735:function(e,t,i){"use strict";var r,a=i(327),l=(i(346),i(501)),s=(i(463),i(431),i(502),i(504),i(457),i(482),i(466),i(478),i(605)),n=i(341),o=i(424),c=i(362),p=i(332),u=i(378),b=i(419),d=i(337),y=i(477),h=i(326),f=i(399),O=i(349),m=i(329),v=i(517),g=i(384),j=(i(325),i(351)),S=i(328),w=i(350),_=i(330),I=i(572),L=i(714),x=i(471),T=i(453),D=i(613),P=i(693),A=i(877),E=i(414),M=i(576),N=i(340);function F(e){return e&&"esriSMS"===e.type}function C(e,t,i){var r;const a=this.originIdOf(t)>=Object(I.d)(i.origin);return{ignoreOrigin:!0,allowNull:a,enabled:!!i&&"map-image"===(null==(r=i.layer)?void 0:r.type)&&(i.writeSublayerStructure||a)}}function V(e,t,i){var r;return{enabled:!!i&&"tile"===(null==(r=i.layer)?void 0:r.type)&&this._isOverridden(t)}}function k(e,t,i){return{ignoreOrigin:!0,enabled:i&&i.writeSublayerStructure||!1}}function $(e,t,i){return{ignoreOrigin:!0,enabled:!!i&&(i.writeSublayerStructure||this.originIdOf(t)>=Object(I.d)(i.origin))}}const J=h.a.getLogger("esri.layers.support.Sublayer");let U=0;const q=new Set;q.add("layer"),q.add("parent"),q.add("loaded"),q.add("loadStatus"),q.add("loadError"),q.add("loadWarnings");let R=r=class extends(Object(u.b)(Object(f.a)(Object(b.a)(y.a)))){constructor(e){super(e),this.capabilities=void 0,this.fields=null,this.fullExtent=null,this.globalIdField=null,this.legendEnabled=!0,this.objectIdField=null,this.popupEnabled=!0,this.popupTemplate=null,this.sourceJSON=null,this.title=null,this.typeIdField=null,this.types=null}async load(e){return this.addResolvingPromise((async()=>{var t;if(!this.layer&&!this.url)throw new p.a("sublayer:missing-layer","Sublayer can't be loaded without being part of a layer",{sublayer:this});let i=null;if(!this.layer||this.originIdOf("url")>2||"data-layer"===(null==(t=this.source)?void 0:t.type))i=(await Object(n.default)(this.url,{responseType:"json",query:{f:"json"},...e})).data;else{var r;let t=this.id;"map-layer"===(null==(r=this.source)?void 0:r.type)&&(t=this.source.mapLayerId),i=await this.layer.fetchSublayerInfo(t,e)}i&&(this.sourceJSON=i,this.read({layerDefinition:i},{origin:"service"}))})()),this}readCapabilities(e,t){const i=(e=(t=t.layerDefinition||t).capabilities||e)?e.toLowerCase().split(",").map(e=>e.trim()):[];return{exportMap:{supportsModification:!!t.canModifyLayer},operations:{supportsQuery:-1!==i.indexOf("query")}}}set definitionExpression(e){this._setAndNotifyLayer("definitionExpression",e)}get fieldsIndex(){return new T.a(this.fields||[])}readGlobalIdFieldFromService(e,t){if((t=t.layerDefinition||t).globalIdField)return t.globalIdField;if(t.fields)for(const i of t.fields)if("esriFieldTypeGlobalID"===i.type)return i.name}get id(){const e=this._get("id");return null==e?U++:e}set id(e){this._get("id")!==e&&(!1!==this.get("layer.capabilities.exportMap.supportsDynamicLayers")?this._set("id",e):this._logLockedError("id","capability not available 'layer.capabilities.exportMap.supportsDynamicLayers'"))}set labelingInfo(e){this._setAndNotifyLayer("labelingInfo",e)}writeLabelingInfo(e,t,i,r){e&&e.length&&(t.layerDefinition={drawingInfo:{labelingInfo:e.map(e=>e.write({},r))}})}set labelsVisible(e){this._setAndNotifyLayer("labelsVisible",e)}set layer(e){this._set("layer",e),this.sublayers&&this.sublayers.forEach(t=>t.layer=e)}set listMode(e){this._set("listMode",e)}set minScale(e){this._setAndNotifyLayer("minScale",e)}readMinScale(e,t){return t.minScale||t.layerDefinition&&t.layerDefinition.minScale||0}set maxScale(e){this._setAndNotifyLayer("maxScale",e)}readMaxScale(e,t){return t.maxScale||t.layerDefinition&&t.layerDefinition.maxScale||0}readObjectIdFieldFromService(e,t){if((t=t.layerDefinition||t).objectIdField)return t.objectIdField;if(t.fields)for(const i of t.fields)if("esriFieldTypeOID"===i.type)return i.name}set opacity(e){this._setAndNotifyLayer("opacity",e)}readOpacity(e,t){const i=t.layerDefinition;return 1-.01*(null!=i.transparency?i.transparency:i.drawingInfo.transparency)}writeOpacity(e,t,i,r){t.layerDefinition={drawingInfo:{transparency:100-100*e}}}writeParent(e,t){this.parent&&this.parent!==this.layer?t.parentLayerId=Object(_.e)(this.parent.id):t.parentLayerId=-1}get defaultPopupTemplate(){return this.createPopupTemplate()}set renderer(e){if(e)for(const t of e.getSymbols())if(Object(o.c)(t)){J.warn("Sublayer renderer should use 2D symbols");break}this._setAndNotifyLayer("renderer",e)}get source(){return this._get("source")||new A.a({mapLayerId:this.id})}set source(e){this._setAndNotifyLayer("source",e)}set sublayers(e){this._handleSublayersChange(e,this._get("sublayers")),this._set("sublayers",e)}castSublayers(e){return Object(_.m)(c.a.ofType(r),e)}writeSublayers(e,t,i){this.get("sublayers.length")&&(t[i]=this.sublayers.map(e=>e.id).toArray().reverse())}readTypeIdField(e,t){let i=(t=t.layerDefinition||t).typeIdField;if(i&&t.fields){i=i.toLowerCase();const e=t.fields.find(e=>e.name.toLowerCase()===i);e&&(i=e.name)}return null}get url(){var e,t;const i=null!=(e=null==(t=this.layer)?void 0:t.parsedUrl)?e:this._lastParsedUrl,r=this.source;if(!i)return null;if(this._lastParsedUrl=i,"map-layer"===(null==r?void 0:r.type))return`${i.path}/${r.mapLayerId}`;const a={layer:JSON.stringify({source:this.source})};return`${i.path}/dynamicLayer?${Object(O.E)(a)}`}set url(e){e?this._override("url",e):this._clearOverride("url")}set visible(e){this._setAndNotifyLayer("visible",e)}writeVisible(e,t,i,r){t[i]=this.getAtOrigin("defaultVisibility","service")||e}clone(){const{store:e}=Object(v.a)(this),t=new r;return Object(v.a)(t).store=e.clone(q),this.commitProperty("url"),t._lastParsedUrl=this._lastParsedUrl,t}createPopupTemplate(e){return Object(M.a)(this,e)}createQuery(){return new E.a({returnGeometry:!0,where:this.definitionExpression||"1=1"})}async createFeatureLayer(){var e,t;if(this.hasOwnProperty("sublayers"))return null;const r=null==(e=this.layer)?void 0:e.parsedUrl,a=new(0,(await Promise.resolve().then(i.bind(null,512))).default)({url:r.path});return r&&this.source&&("map-layer"===this.source.type?a.layerId=this.source.mapLayerId:a.dynamicDataSource=this.source),null!=this.layer.refreshInterval&&(a.refreshInterval=this.layer.refreshInterval),this.definitionExpression&&(a.definitionExpression=this.definitionExpression),this.originIdOf("labelingInfo")>2&&(a.labelingInfo=Object(d.a)(this.labelingInfo)),this.originIdOf("labelsVisible")>0&&(a.labelsVisible=this.labelsVisible),this.originIdOf("legendEnabled")>0&&(a.legendEnabled=this.legendEnabled),this.originIdOf("visible")>0&&(a.visible=this.visible),this.originIdOf("minScale")>0&&(a.minScale=this.minScale),this.originIdOf("maxScale")>0&&(a.maxScale=this.maxScale),this.originIdOf("opacity")>0&&(a.opacity=this.opacity),this.originIdOf("popupTemplate")>0&&(a.popupTemplate=Object(d.a)(this.popupTemplate)),this.originIdOf("renderer")>2&&(a.renderer=Object(d.a)(this.renderer)),"data-layer"===(null==(t=this.source)?void 0:t.type)&&(a.dynamicDataSource=this.source.clone()),this.originIdOf("title")>0&&(a.title=this.title),"map-image"===this.layer.type&&this.layer.originIdOf("customParameters")>0&&(a.customParameters=this.layer.customParameters),"tile"===this.layer.type&&this.layer.originIdOf("customParameters")>0&&(a.customParameters=this.layer.customParameters),a}getFeatureType(e){const{typeIdField:t,types:i}=this;if(!t||!e)return null;const r=e.attributes?e.attributes[t]:void 0;if(null==r)return null;let a=null;return i.some(e=>{const{id:t}=e;return null!=t&&(t.toString()===r.toString()&&(a=e),!!a)}),a}getFieldDomain(e,t){const i=t&&t.feature,r=this.getFeatureType(i);if(r){const t=r.domains&&r.domains[e];if(t&&"inherited"!==t.type)return t}return this._getLayerDomain(e)}async queryFeatures(e=this.createQuery(),t){var r,a,l,s;if(await this.load(),!this.get("capabilities.operations.supportsQuery"))throw new p.a("Sublayer.queryFeatures","this layer doesn't support queries.");const[{executeQuery:n},{default:o}]=await Promise.all([Promise.resolve().then(i.bind(null,563)),Promise.resolve().then(i.bind(null,405))]),c=await n(this.url,E.a.from(e),null!=(r=null==(a=this.layer)?void 0:a.spatialReference)?r:null,{...t,query:{...null==(l=this.layer)?void 0:l.customParameters,token:null==(s=this.layer)?void 0:s.apiKey}}),u=o.fromJSON(c.data);if(null!=u&&u.features)for(const i of u.features)i.sourceLayer=this;return u}toExportImageJSON(){var e;const t={id:this.id,source:(null==(e=this.source)?void 0:e.toJSON())||{mapLayerId:this.id,type:"mapLayer"}};this.definitionExpression&&(t.definitionExpression=this.definitionExpression);const i=["renderer","labelingInfo","opacity","labelsVisible"].reduce((e,t)=>(e[t]=this.originIdOf(t),e),{});if(Object.keys(i).some(e=>i[e]>2)){const e=t.drawingInfo={};i.renderer>2&&(e.renderer=this.renderer?this.renderer.toJSON():null),i.labelsVisible>2&&(e.showLabels=this.labelsVisible),this.labelsVisible&&i.labelingInfo>2&&(e.labelingInfo=this.labelingInfo?this.labelingInfo.map(e=>e.write({},{origin:"service",layer:this.layer})):null,e.showLabels=!0),i.opacity>2&&(e.transparency=100-100*this.opacity),this._assignDefaultSymbolColors(e.renderer)}return t}_assignDefaultSymbolColors(e){this._forEachSimpleMarkerSymbols(e,e=>{e.color||"esriSMSX"!==e.style&&"esriSMSCross"!==e.style||(e.outline&&e.outline.color?e.color=e.outline.color:e.color=[0,0,0,0])})}_forEachSimpleMarkerSymbols(e,t){if(e){const i="uniqueValueInfos"in e?e.uniqueValueInfos:"classBreakInfos"in e?e.classBreakInfos:[];for(const e of i)F(e.symbol)&&t(e.symbol);"symbol"in e&&F(e.symbol)&&t(e.symbol),"defaultSymbol"in e&&F(e.defaultSymbol)&&t(e.defaultSymbol)}}_setAndNotifyLayer(e,t){const i=this.layer,r=this._get(e);let a,l;switch(e){case"definitionExpression":a="supportsSublayerDefinitionExpression";case"minScale":case"maxScale":case"visible":a="supportsSublayerVisibility";break;case"labelingInfo":case"labelsVisible":case"opacity":case"renderer":case"source":a="supportsDynamicLayers",l="supportsModification"}const s=Object(v.a)(this).getDefaultOrigin();if("service"!==s){if(a&&!1===this.get("layer.capabilities.exportMap."+a))return void this._logLockedError(e,`capability not available 'layer.capabilities.exportMap.${a}'`);if(l&&!1===this.get("capabilities.exportMap."+l))return void this._logLockedError(e,`capability not available 'capabilities.exportMap.${l}'`)}"source"!==e||"not-loaded"===this.loadStatus?(this._set(e,t),"service"!==s&&r!==t&&i&&i.emit&&i.emit("sublayer-update",{propertyName:e,target:this})):this._logLockedError(e,"'source' can't be changed after calling sublayer.load()")}_handleSublayersChange(e,t){t&&(t.forEach(e=>{e.parent=null,e.layer=null}),this.handles.removeAll()),e&&(e.forEach(e=>{e.parent=this,e.layer=this.layer}),this.handles.add([e.on("after-add",({item:e})=>{e.parent=this,e.layer=this.layer}),e.on("after-remove",({item:e})=>{e.parent=null,e.layer=null}),e.on("before-changes",e=>{const t=this.get("layer.capabilities.exportMap.supportsSublayersChanges");null==t||t||(J.error(new p.a("sublayer:sublayers-non-modifiable","Sublayer can't be added, moved, or removed from the layer's sublayers",{sublayer:this,layer:this.layer})),e.preventDefault())})]))}_logLockedError(e,t){J.error(new p.a("sublayer:locked",`Property '${e}' can't be changed on Sublayer from the layer '${this.layer.id}'`,{reason:t,sublayer:this,layer:this.layer}))}_getLayerDomain(e){const t=this.fieldsIndex.get(e);return t?t.domain:null}};R.test={isMapImageLayerOverridePolicy:e=>e===k||e===C,isTileImageLayerOverridePolicy:e=>e===V},Object(a.a)([Object(m.b)({readOnly:!0})],R.prototype,"capabilities",void 0),Object(a.a)([Object(j.a)("service","capabilities",["layerDefinition.canModifyLayer","layerDefinition.capabilities"])],R.prototype,"readCapabilities",null),Object(a.a)([Object(m.b)({type:String,value:null,json:{name:"layerDefinition.definitionExpression",write:{overridePolicy:C}}})],R.prototype,"definitionExpression",null),Object(a.a)([Object(m.b)({type:[x.a],json:{origins:{service:{read:{source:"layerDefinition.fields"}}}}})],R.prototype,"fields",void 0),Object(a.a)([Object(m.b)({readOnly:!0})],R.prototype,"fieldsIndex",null),Object(a.a)([Object(m.b)({type:N.a,json:{read:{source:"layerDefinition.extent"}}})],R.prototype,"fullExtent",void 0),Object(a.a)([Object(m.b)({type:String})],R.prototype,"globalIdField",void 0),Object(a.a)([Object(j.a)("service","globalIdField",["layerDefinition.globalIdField","layerDefinition.fields"])],R.prototype,"readGlobalIdFieldFromService",null),Object(a.a)([Object(m.b)({type:_.a,json:{write:{ignoreOrigin:!0}}})],R.prototype,"id",null),Object(a.a)([Object(m.b)({value:null,type:[D.a],json:{read:{source:"layerDefinition.drawingInfo.labelingInfo"},write:{target:"layerDefinition.drawingInfo.labelingInfo",overridePolicy:k}}})],R.prototype,"labelingInfo",null),Object(a.a)([Object(w.a)("labelingInfo")],R.prototype,"writeLabelingInfo",null),Object(a.a)([Object(m.b)({type:Boolean,value:!0,json:{read:{source:"layerDefinition.drawingInfo.showLabels"},write:{target:"layerDefinition.drawingInfo.showLabels",overridePolicy:k}}})],R.prototype,"labelsVisible",null),Object(a.a)([Object(m.b)({value:null})],R.prototype,"layer",null),Object(a.a)([Object(m.b)({type:Boolean,value:!0,json:{origins:{service:{read:{enabled:!1}}},read:{source:"showLegend"},write:{target:"showLegend",overridePolicy:$}}})],R.prototype,"legendEnabled",void 0),Object(a.a)([Object(m.b)({type:["show","hide","hide-children"],value:"show",json:{read:!1,write:!1,origins:{"web-scene":{read:!0,write:!0}}}})],R.prototype,"listMode",null),Object(a.a)([Object(m.b)({type:Number,value:0,json:{write:{overridePolicy:k}}})],R.prototype,"minScale",null),Object(a.a)([Object(j.a)("minScale",["minScale","layerDefinition.minScale"])],R.prototype,"readMinScale",null),Object(a.a)([Object(m.b)({type:Number,value:0,json:{write:{overridePolicy:k}}})],R.prototype,"maxScale",null),Object(a.a)([Object(j.a)("maxScale",["maxScale","layerDefinition.maxScale"])],R.prototype,"readMaxScale",null),Object(a.a)([Object(m.b)({type:String})],R.prototype,"objectIdField",void 0),Object(a.a)([Object(j.a)("service","objectIdField",["layerDefinition.objectIdField","layerDefinition.fields"])],R.prototype,"readObjectIdFieldFromService",null),Object(a.a)([Object(m.b)({type:Number,value:1,json:{write:{target:"layerDefinition.drawingInfo.transparency",overridePolicy:k}}})],R.prototype,"opacity",null),Object(a.a)([Object(j.a)("opacity",["layerDefinition.drawingInfo.transparency","layerDefinition.transparency"])],R.prototype,"readOpacity",null),Object(a.a)([Object(w.a)("opacity")],R.prototype,"writeOpacity",null),Object(a.a)([Object(m.b)({json:{type:_.a,write:{target:"parentLayerId",allowNull:!0,overridePolicy:k}}})],R.prototype,"parent",void 0),Object(a.a)([Object(w.a)("parent")],R.prototype,"writeParent",null),Object(a.a)([Object(m.b)({type:Boolean,value:!0,json:{read:{source:"disablePopup",reader:(e,t)=>!t.disablePopup},write:{target:"disablePopup",overridePolicy:$,writer(e,t,i){t[i]=!e}}}})],R.prototype,"popupEnabled",void 0),Object(a.a)([Object(m.b)({type:l.a,json:{read:{source:"popupInfo"},write:{target:"popupInfo",overridePolicy:$}}})],R.prototype,"popupTemplate",void 0),Object(a.a)([Object(m.b)({readOnly:!0})],R.prototype,"defaultPopupTemplate",null),Object(a.a)([Object(m.b)({types:s.a,value:null,json:{name:"layerDefinition.drawingInfo.renderer",write:{overridePolicy:k},origins:{"web-scene":{types:s.b,name:"layerDefinition.drawingInfo.renderer",write:{overridePolicy:k}}}}})],R.prototype,"renderer",null),Object(a.a)([Object(m.b)({types:{key:"type",base:null,typeMap:{"data-layer":P.a,"map-layer":A.a}},cast(e){if(e){if("mapLayerId"in e)return Object(_.d)(A.a,e);if("dataSource"in e)return Object(_.d)(P.a,e)}return e},json:{name:"layerDefinition.source",write:{overridePolicy:k}}})],R.prototype,"source",null),Object(a.a)([Object(m.b)()],R.prototype,"sourceJSON",void 0),Object(a.a)([Object(m.b)({value:null,json:{type:[_.a],write:{target:"subLayerIds",allowNull:!0,overridePolicy:k}}})],R.prototype,"sublayers",null),Object(a.a)([Object(g.a)("sublayers")],R.prototype,"castSublayers",null),Object(a.a)([Object(w.a)("sublayers")],R.prototype,"writeSublayers",null),Object(a.a)([Object(m.b)({type:String,json:{read:{source:"name"},write:{target:"name",allowNull:!0,overridePolicy:$}}})],R.prototype,"title",void 0),Object(a.a)([Object(m.b)({type:String})],R.prototype,"typeIdField",void 0),Object(a.a)([Object(j.a)("typeIdField",["layerDefinition.typeIdField"])],R.prototype,"readTypeIdField",null),Object(a.a)([Object(m.b)({type:[L.a],json:{origins:{service:{read:{source:"layerDefinition.types"}}}}})],R.prototype,"types",void 0),Object(a.a)([Object(m.b)({type:String,json:{read:{source:"layerUrl"},write:{target:"layerUrl",overridePolicy:V}}})],R.prototype,"url",null),Object(a.a)([Object(m.b)({type:Boolean,value:!0,json:{read:{source:"defaultVisibility"},write:{target:"defaultVisibility",overridePolicy:k}}})],R.prototype,"visible",null),Object(a.a)([Object(w.a)("visible")],R.prototype,"writeVisible",null),R=r=Object(a.a)([Object(S.a)("esri.layers.support.Sublayer")],R);var B=R;t.a=B},812:function(e,t,i){"use strict";i.r(t);var r=i(327),a=(i(346),i(341)),l=i(332),s=i(378),n=i(331),o=i(399),c=i(334),p=i(349),u=i(329),b=(i(325),i(384)),d=(i(326),i(351)),y=i(328),h=i(350),f=i(413),O=i(625),m=i(719),v=i(931),g=i(575),j=i(472),S=i(647),w=i(455),_=i(441),I=i(521),L=i(458),x=i(932),T=i(519),D=i(395),P=i(735),A=i(347);const E=["Canvas/World_Dark_Gray_Base","Canvas/World_Dark_Gray_Reference","Canvas/World_Light_Gray_Base","Canvas/World_Light_Gray_Reference","Elevation/World_Hillshade","Elevation/World_Hillshade_Dark","Ocean/World_Ocean_Base","Ocean/World_Ocean_Reference","Ocean_Basemap","Reference/World_Boundaries_and_Places","Reference/World_Boundaries_and_Places_Alternate","Reference/World_Transportation","World_Imagery","World_Street_Map","World_Topo_Map"];let M=class extends(Object(j.a)(Object(x.a)(Object(L.a)(Object(I.a)(Object(w.a)(Object(_.a)(Object(m.a)(Object(v.a)(Object(g.a)(Object(o.a)(Object(s.b)(Object(O.a)(Object(S.a)(f.a)))))))))))))){constructor(...e){super(...e),this.listMode="show",this.isReference=null,this.operationalLayerType="ArcGISTiledMapServiceLayer",this.resampling=!0,this.sourceJSON=null,this.spatialReference=null,this.path=null,this.sublayers=null,this.type="tile",this.url=null}normalizeCtorArgs(e,t){return"string"==typeof e?{url:e,...t}:e}load(e){const t=Object(n.i)(e)?e.signal:null;return this.addResolvingPromise(this.loadFromPortal({supportedTypes:["Map Service"]},e).catch(c.u).then(()=>this._fetchService(t))),Promise.resolve(this)}get attributionDataUrl(){var e;const t=null==(e=this.parsedUrl)?void 0:e.path.toLowerCase();return t&&this._getDefaultAttribution(this._getMapName(t))}readSpatialReference(e,t){return(e=e||t.tileInfo&&t.tileInfo.spatialReference)&&A.a.fromJSON(e)}writeSublayers(e,t,i,r){if(!this.loaded||!e)return;const a=e.slice().reverse().flatten(({sublayers:e})=>e&&e.toArray().reverse()).toArray(),l=[],s={writeSublayerStructure:!1,...r};a.forEach(e=>{const t=e.write({},s);l.push(t)}),l.some(e=>Object.keys(e).length>1)&&(t.layers=l)}get tileServers(){return this._getDefaultTileServers(this.parsedUrl.path)}castTileServers(e){return Array.isArray(e)?e.map(e=>Object(p.K)(e).path):null}fetchTile(e,t,i,r={}){const{signal:l,timestamp:s}=r,n=this.getTileUrl(e,t,i),o={responseType:"image",signal:l};return null!=s&&(o.query={_ts:r.timestamp}),Object(a.default)(n,o).then(e=>e.data)}getTileUrl(e,t,i){const r=!this.tilemapCache&&this.supportsBlankTile,a=Object(p.E)({...this.parsedUrl.query,blankTile:!r&&null,...this.customParameters,token:this.apiKey}),l=this.tileServers;return`${l&&l.length?l[t%l.length]:this.parsedUrl.path}/tile/${e}/${t}/${i}${a?"?"+a:""}`}_fetchService(e){return new Promise((t,i)=>{if(this.sourceJSON){if(null!=this.sourceJSON.bandCount&&null!=this.sourceJSON.pixelSizeX)throw new l.a("tile-layer:unsupported-url","use ImageryTileLayer to open a tiled image service");return void t({data:this.sourceJSON})}if(!this.parsedUrl)throw new l.a("tile-layer:undefined-url","layer's url is not defined");const r=Object(T.f)(this.parsedUrl.path);if(Object(n.i)(r)&&"ImageServer"===r.serverType)throw new l.a("tile-layer:unsupported-url","use ImageryTileLayer to open a tiled image service");Object(a.default)(this.parsedUrl.path,{query:{f:"json",...this.parsedUrl.query,...this.customParameters,token:this.apiKey},responseType:"json",signal:e}).then(t,i)}).then(t=>{if(t.ssl&&(this.url=this.url.replace(/^http:/i,"https:")),this.sourceJSON=t.data,this.read(t.data,{origin:"service",url:this.parsedUrl}),10.1===this.version&&!Object(T.c)(this.url))return this._fetchServerVersion(this.url,e).then(e=>{this.read({currentVersion:e})}).catch(()=>{})})}_fetchServerVersion(e,t){if(!Object(T.b)(e))return Promise.reject();const i=e.replace(/(.*\/rest)\/.*/i,"$1")+"/info";return Object(a.default)(i,{query:{f:"json",...this.customParameters,token:this.apiKey},responseType:"json",signal:t}).then(e=>{if(e.data&&e.data.currentVersion)return e.data.currentVersion;throw new l.a("tile-layer:version-not-available")})}_getMapName(e){const t=e.match(/^(?:https?:)?\/\/(server\.arcgisonline\.com|services\.arcgisonline\.com|ibasemaps-api\.arcgis\.com)\/arcgis\/rest\/services\/([^\/]+(\/[^\/]+)*)\/mapserver/i);return t&&t[2]}_getDefaultAttribution(e){if(!e)return;let t;e=e.toLowerCase();for(let i=0,r=E.length;i<r;i++)if(t=E[i],t.toLowerCase().indexOf(e)>-1)return Object(p.A)("//static.arcgis.com/attribution/"+t)}_getDefaultTileServers(e){const t=-1!==e.search(/^(?:https?:)?\/\/server\.arcgisonline\.com/i),i=-1!==e.search(/^(?:https?:)?\/\/services\.arcgisonline\.com/i);return t||i?[e,e.replace(t?/server\.arcgisonline/i:/services\.arcgisonline/i,t?"services.arcgisonline":"server.arcgisonline")]:[]}get hasOverriddenFetchTile(){return!this.fetchTile.__isDefault__}};Object(r.a)([Object(u.b)({readOnly:!0})],M.prototype,"attributionDataUrl",null),Object(r.a)([Object(u.b)({type:["show","hide","hide-children"]})],M.prototype,"listMode",void 0),Object(r.a)([Object(u.b)({type:Boolean,json:{read:!1,write:{enabled:!0,overridePolicy:()=>({enabled:!1})}}})],M.prototype,"isReference",void 0),Object(r.a)([Object(u.b)({readOnly:!0,type:["ArcGISTiledMapServiceLayer"]})],M.prototype,"operationalLayerType",void 0),Object(r.a)([Object(u.b)({type:Boolean})],M.prototype,"resampling",void 0),Object(r.a)([Object(u.b)()],M.prototype,"sourceJSON",void 0),Object(r.a)([Object(u.b)({type:A.a})],M.prototype,"spatialReference",void 0),Object(r.a)([Object(d.a)("spatialReference",["spatialReference","tileInfo"])],M.prototype,"readSpatialReference",null),Object(r.a)([Object(u.b)({type:String,json:{origins:{"web-scene":{read:!0,write:!0}},read:!1}})],M.prototype,"path",void 0),Object(r.a)([Object(u.b)({readOnly:!0})],M.prototype,"sublayers",void 0),Object(r.a)([Object(h.a)("sublayers",{layers:{type:[P.a]}})],M.prototype,"writeSublayers",null),Object(r.a)([Object(u.b)({json:{read:!1,write:!1}})],M.prototype,"popupEnabled",void 0),Object(r.a)([Object(u.b)()],M.prototype,"tileServers",null),Object(r.a)([Object(b.a)("tileServers")],M.prototype,"castTileServers",null),Object(r.a)([Object(u.b)({readOnly:!0,json:{read:!1}})],M.prototype,"type",void 0),Object(r.a)([Object(u.b)(D.n)],M.prototype,"url",void 0),M=Object(r.a)([Object(y.a)("esri.layers.TileLayer")],M),M.prototype.fetchTile.__isDefault__=!0;var N=M;t.default=N},931:function(e,t,i){"use strict";i.d(t,"a",(function(){return y}));var r=i(327),a=i(341),l=i(334),s=i(349),n=i(702),o=i(329),c=(i(325),i(330),i(326),i(351)),p=i(328),u=i(340),b=i(347),d=i(395);const y=e=>{let t=class extends e{constructor(){super(...arguments),this.capabilities=void 0,this.copyright=null,this.fullExtent=null,this.legendEnabled=!0,this.spatialReference=null,this.version=null}readCapabilities(e,t){const i=t.capabilities&&t.capabilities.split(",").map(e=>e.toLowerCase().trim());if(!i)return{operations:{supportsQuery:!1,supportsExportMap:!1,supportsExportTiles:!1,supportsTileMap:!1},exportMap:null,exportTiles:null};const r=this.type,a=-1!==i.indexOf("query"),l=-1!==i.indexOf("map"),s=!!t.exportTilesAllowed,o=-1!==i.indexOf("tilemap"),c="tile"!==r&&!!t.supportsDynamicLayers,p="tile"!==r&&(!t.tileInfo||c),u="tile"!==r&&(!t.tileInfo||c),b="tile"!==r,d=!!t.cimVersion&&n.a.parse(t.cimVersion).since(1,4);return{operations:{supportsQuery:a,supportsExportMap:l,supportsExportTiles:s,supportsTileMap:o},exportMap:l?{supportsArcadeExpressionForLabeling:d,supportsSublayersChanges:b,supportsDynamicLayers:c,supportsSublayerVisibility:p,supportsSublayerDefinitionExpression:u}:null,exportTiles:s?{maxExportTilesCount:+t.maxExportTilesCount}:null}}readVersion(e,t){let i=t.currentVersion;return i||(i=t.hasOwnProperty("capabilities")||t.hasOwnProperty("tables")?10:t.hasOwnProperty("supportedImageFormatTypes")?9.31:9.3),i}async fetchSublayerInfo(e,t){return await this.fetchAllLayersAndTables(t),this._allLayersAndTablesMap.get(e)}async fetchAllLayersAndTables(e){await this.load(e),this._allLayersAndTablesPromise||(this._allLayersAndTablesPromise=Object(a.default)(Object(s.K)(this.url).path+"/layers",{responseType:"json",query:{f:"json",...this.customParameters,token:this.apiKey}}).then(e=>{this._allLayersAndTablesMap=new Map;for(const t of e.data.layers)this._allLayersAndTablesMap.set(t.id,t);return{result:e.data}},e=>({error:e})));const t=await this._allLayersAndTablesPromise;if(Object(l.v)(e),"result"in t)return t.result;throw t.error}};return Object(r.a)([Object(o.b)({readOnly:!0})],t.prototype,"capabilities",void 0),Object(r.a)([Object(c.a)("service","capabilities",["capabilities","exportTilesAllowed","maxExportTilesCount","supportsDynamicLayers","tileInfo"])],t.prototype,"readCapabilities",null),Object(r.a)([Object(o.b)({json:{read:{source:"copyrightText"}}})],t.prototype,"copyright",void 0),Object(r.a)([Object(o.b)({type:u.a})],t.prototype,"fullExtent",void 0),Object(r.a)([Object(o.b)(d.c)],t.prototype,"id",void 0),Object(r.a)([Object(o.b)({type:Boolean,json:{origins:{service:{read:{enabled:!1}}},read:{source:"showLegend"},write:{target:"showLegend"}}})],t.prototype,"legendEnabled",void 0),Object(r.a)([Object(o.b)(d.j)],t.prototype,"popupEnabled",void 0),Object(r.a)([Object(o.b)({type:b.a})],t.prototype,"spatialReference",void 0),Object(r.a)([Object(o.b)()],t.prototype,"version",void 0),Object(r.a)([Object(c.a)("version",["currentVersion","capabilities","tables","supportedImageFormatTypes"])],t.prototype,"readVersion",null),t=Object(r.a)([Object(p.a)("esri.layers.mixins.ArcGISMapService")],t),t}},932:function(e,t,i){"use strict";i.d(t,"a",(function(){return f}));var r=i(327),a=i(362),l=i(601),s=i(332),n=i(326),o=i(329),c=(i(325),i(517)),p=(i(330),i(328)),u=i(572),b=i(735),d=i(659);const y=n.a.getLogger("esri.layers.TileLayer");const h=a.a.ofType(b.a);const f=e=>{let t=class extends e{constructor(...e){super(...e),this.allSublayers=new l.a({getCollections:()=>[this.sublayers],getChildrenFunction:e=>e.sublayers}),this.sublayersSourceJSON={2:{},3:{},4:{},5:{}},this.handles.add(this.watch("sublayers",(e,t)=>this._handleSublayersChange(e,t),!0))}readSublayers(e,t){if(!t||!e)return;const{sublayersSourceJSON:i}=this,r=Object(u.d)(t.origin);if(r<2)return;if(i[r]={context:t,visibleLayers:e.visibleLayers||i[r].visibleLayers,layers:e.layers||i[r].layers},r>2)return;this._set("serviceSublayers",this.createSublayersForOrigin("service").sublayers);const{sublayers:a,origin:l}=this.createSublayersForOrigin("web-document"),s=Object(c.a)(this);s.setDefaultOrigin(l),this._set("sublayers",new h(a)),s.setDefaultOrigin("user")}findSublayerById(e){return this.allSublayers.find(t=>t.id===e)}createServiceSublayers(){return this.createSublayersForOrigin("service").sublayers}createSublayersForOrigin(e){const t=Object(u.d)("web-document"===e?"web-map":e);let i=2,r=this.sublayersSourceJSON[2].layers,a=this.sublayersSourceJSON[2].context,l=null;const s=[3,4,5].filter(e=>e<=t);for(const u of s){const e=this.sublayersSourceJSON[u];Object(d.b)(e.layers)&&(i=u,r=e.layers,a=e.context,e.visibleLayers&&(l={visibleLayers:e.visibleLayers,context:e.context}))}const n=[3,4,5].filter(e=>e>i&&e<=t);let o=null;for(const u of n){const{layers:e,visibleLayers:t,context:i}=this.sublayersSourceJSON[u];e&&(o={layers:e,context:i}),t&&(l={visibleLayers:t,context:i})}const c=function(e,t){const i=[],r={};return e?(e.forEach(e=>{const a=new b.a;if(a.read(e,t),r[a.id]=a,null!=e.parentLayerId&&-1!==e.parentLayerId){const t=r[e.parentLayerId];t.sublayers||(t.sublayers=[]),t.sublayers.unshift(a)}else i.unshift(a)}),i):i}(r,a),p=new Map,y=new Set;if(o)for(const u of o.layers)p.set(u.id,u);if(l)for(const u of l.visibleLayers)y.add(u);return function e(t,i){t&&t.forEach(t=>{i(t),t.sublayers&&t.sublayers.length&&e(t.sublayers,i)})}(c,e=>{o&&e.read(p.get(e.id),o.context),l&&e.read({defaultVisibility:y.has(e.id)},l.context)}),{origin:Object(u.b)(i),sublayers:new h({items:c})}}read(e,t){super.read(e,t),this.readSublayers(e,t)}_handleSublayersChange(e,t){t&&(t.forEach(e=>{e.parent=null,e.layer=null}),this.handles.remove("sublayers-owner")),e&&(e.forEach(e=>{e.parent=this,e.layer=this}),this.handles.add([e.on("after-add",({item:e})=>{e.parent=this,e.layer=this}),e.on("after-remove",({item:e})=>{e.parent=null,e.layer=null})],"sublayers-owner"),"tile"===this.type&&this.handles.add(e.on("before-changes",e=>{y.error(new s.a("tilelayer:sublayers-non-modifiable","ISublayer can't be added, moved, or removed from the layer's sublayers",{layer:this})),e.preventDefault()}),"sublayers-owner"))}};return Object(r.a)([Object(o.b)({readOnly:!0})],t.prototype,"allSublayers",void 0),Object(r.a)([Object(o.b)({readOnly:!0,type:a.a.ofType(b.a)})],t.prototype,"serviceSublayers",void 0),Object(r.a)([Object(o.b)({value:null,type:h,json:{read:!1,write:{allowNull:!0,ignoreOrigin:!0}}})],t.prototype,"sublayers",void 0),Object(r.a)([Object(o.b)({readOnly:!0})],t.prototype,"sublayersSourceJSON",void 0),t=Object(r.a)([Object(p.a)("esri.layers.mixins.SublayersOwner")],t),t}}}]);
//# sourceMappingURL=59.82bcdbb7.chunk.js.map